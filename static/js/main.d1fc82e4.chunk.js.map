{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACJC,IAAMC,IAJlB,kDAI2B,CACrCC,OAAQ,CACPC,EAAGL,EACHM,MAAO,SACPC,MAPa,sCAEY,uBACnBC,EADmB,EACnBA,KADmB,kBASpBA,GAToB,2CAAH,sD,eC+CVC,EA/CH,WACX,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACA,UAAVc,EAAEC,IADQ,gCAEMjB,EAAaC,GAFnB,OAEPQ,EAFO,OAIbK,EAAWL,GACXG,EAAS,IALI,2CAAH,sDASZ,OACC,sBAAKM,UAAU,iBAAf,UACC,uBACCC,KAAK,OACLD,UAAU,SACVE,YAAY,YACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QACnCG,WAAYT,IAEZF,EAAQY,MACR,sBAAKP,UAAU,OAAf,UACC,qBAAIA,UAAU,YAAd,UACC,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEnB,sBAAKV,UAAU,YAAf,UACEW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAED,sBAAKb,UAAU,OAAf,UACC,qBACCA,UAAU,YACVc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WACHC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAEzB,4BAAItB,EAAQA,QAAQ,GAAGsB,wBCxC7BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d1fc82e4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"08550128da0f1816046f223b39aebe9d\";\r\n\r\nexport const fetchWeather = async (query) => {\r\n\tconst { data } = await axios.get(URL, {\r\n\t\tparams: {\r\n\t\t\tq: query,\r\n\t\t\tunits: \"metric\",\r\n\t\t\tAPPID: API_KEY,\r\n\t\t},\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n","import React, { useState } from \"react\";\n\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport \"./App.css\";\n\nconst App = () => {\n\tconst [query, setQuery] = useState(\"\");\n\tconst [weather, setWeather] = useState({});\n\n\tconst search = async (e) => {\n\t\tif (e.key === \"Enter\") {\n\t\t\tconst data = await fetchWeather(query);\n\n\t\t\tsetWeather(data);\n\t\t\tsetQuery(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"main-container\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"search\"\n\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\tvalue={query}\n\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\tonKeyPress={search}\n\t\t\t/>\n\t\t\t{weather.main && (\n\t\t\t\t<div className=\"city\">\n\t\t\t\t\t<h2 className=\"city-name\">\n\t\t\t\t\t\t<span>{weather.name}</span>\n\t\t\t\t\t\t<sup>{weather.sys.country}</sup>\n\t\t\t\t\t</h2>\n\t\t\t\t\t<div className=\"city-temp\">\n\t\t\t\t\t\t{Math.round(weather.main.temp)}\n\t\t\t\t\t\t<sup>&deg;C</sup>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"city-icon\"\n\t\t\t\t\t\t\tsrc={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\talt={weather.weather[0].description}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p>{weather.weather[0].description}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}